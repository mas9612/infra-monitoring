# TODO
# - persistent volume
# - persistent volume claim
#   - store /prometheus
#########################################################################
apiVersion: v1
kind: Service
metadata:
  name: prom-service
  namespace: monitoring
spec:
  ports:
    - name: prometheus
      port: 9090
      targetPort: prom-port
  selector:
    app: prometheus
    env: test

---
apiVersion: v1
kind: Service
metadata:
  name: alert-service
  namespace: monitoring
spec:
  ports:
    - name: alertmanager
      port: 9093
      targetPort: alert-port
  selector:
    app: alertmanager
    env: test

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prom-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alert-service:9093

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: prom-deployment
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      namespace: monitoring
      labels:
        app: prometheus
        env: test
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.3.2
          ports:
            - name: prom-port
              containerPort: 9090
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention=365d
            - --web.enable-lifecycle
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
          # env:
          volumeMounts:
            - name: prom-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
          # livenessProbe
          # readinessProbe:
          # initContainers:
      volumes:
        - name: prom-config
          configMap:
            name: prom-config

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: alert-deployment
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      namespace: monitoring
      labels:
        app: alertmanager
        env: test
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.15.1
          ports:
            - name: alert-port
              containerPort: 9093
          # args:
          # env:
          volumeMounts:
            - name: alert-config
              mountPath: /etc/alertmanager/alertmanager.yml
              subPath: alertmanager.yml
          # livenessProbe
          # readinessProbe:
          # initContainers:
      volumes:
        - name: alert-config
          secret:
            secretName: alert-secret
            optional: false

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prom-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: prom.k800123.firefly.kutc.kansai-u.ac.jp
      http:
        paths:
          - path: /
            backend:
              serviceName: prom-service
              servicePort: 9090
    - host: alert.k800123.firefly.kutc.kansai-u.ac.jp
      http:
        paths:
          - path: /
            backend:
              serviceName: alert-service
              servicePort: 9093
