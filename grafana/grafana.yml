apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
spec:
  ports:
    - name: grafana
      port: 3000
      protocol: TCP
      targetPort: grafana-port
  selector:
    app: grafana
    env: test

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-storage
  labels:
    volume: grafana-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 8Gi
  nfs:
    path: /export/grafana-storage
    server: 10.1.240.80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  labels:
    app: grafana
    env: test
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  selector:
    matchLabels:
      volume: grafana-storage

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      namespace: monitoring
      labels:
        app: grafana
        env: test
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:5.1.4
          ports:
            - name: grafana-port
              containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: grafana-admin-pass
                  optional: false
            - name: GF_DATABASE_TYPE
              value: mysql
            - name: GF_DATABASE_HOST
              value: mysql-0.grafana-mysql
            - name: GF_DATABASE_NAME
              value: grafana
            - name: GF_DATABASE_USER
              value: grafana
            - name: GF_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user-pass
                  optional: false
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /api/health
              port: 3000
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /api/health
              port: 3000
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: grafana.k800123.firefly.kutc.kansai-u.ac.jp
      http:
        paths:
          - path: /
            backend:
              serviceName: grafana-service
              servicePort: 3000
